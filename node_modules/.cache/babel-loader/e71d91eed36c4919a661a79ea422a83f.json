{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _types = require('@appbaseio/reactivecore/lib/utils/types');\n\nvar _types2 = _interopRequireDefault(_types);\n\nvar _Histogram = require('../../../styles/Histogram');\n\nvar _Histogram2 = _interopRequireDefault(_Histogram);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getWidth = function getWidth(index, range, item, props) {\n  var diff = void 0;\n\n  if (index < range.length - 1) {\n    diff = range[index + 1].key - item.key;\n  } else {\n    diff = props.range.end - item.key;\n  }\n\n  var fullRange = props.range.end - props.range.start;\n  return diff / fullRange * 100 + '%';\n};\n\nvar HistogramContainer = function HistogramContainer(props) {\n  var max = props.stats[0].doc_count;\n  props.stats.forEach(function (item) {\n    if (max < item.doc_count) {\n      max = item.doc_count;\n    }\n  });\n  var range = [].concat(props.stats);\n\n  if (props.stats.length) {\n    if (range[0].key > props.range.start) {\n      range = [{\n        key: props.range.start,\n        doc_count: 0\n      }].concat(range);\n    }\n\n    var lastElement = range[range.length - 1];\n\n    if (lastElement.key + props.interval < props.range.end) {\n      range = [].concat(range, [{\n        key: props.interval + lastElement.key,\n        doc_count: 0\n      }]);\n    }\n  }\n\n  return _react2.default.createElement('div', {\n    className: _Histogram.histogramContainer\n  }, range.map(function (item, index) {\n    return _react2.default.createElement(_Histogram2.default, {\n      key: item.key,\n      width: getWidth(index, range, item, props),\n      height: (100 * item.doc_count / max || 0) + '%',\n      title: item.doc_count\n    });\n  }));\n};\n\nHistogramContainer.propTypes = {\n  interval: _types2.default.number,\n  range: _types2.default.range,\n  stats: _types2.default.stats\n};\nexports.default = HistogramContainer;","map":null,"metadata":{},"sourceType":"script"}