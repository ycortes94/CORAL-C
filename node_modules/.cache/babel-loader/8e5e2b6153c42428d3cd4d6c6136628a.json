{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = Pagination;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _helper = require('@appbaseio/reactivecore/lib/utils/helper');\n\nvar _types = require('@appbaseio/reactivecore/lib/utils/types');\n\nvar _types2 = _interopRequireDefault(_types);\n\nvar _Button = require('../../../styles/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStartPage(totalPages, currentPage) {\n  var midValue = parseInt(totalPages / 2, 10);\n  var start = currentPage - midValue;\n  return start > 1 ? start : 2;\n}\n\nfunction Pagination(props) {\n  var start = getStartPage(props.pages, props.currentPage);\n  var pages = [];\n\n  var onPrevPage = function onPrevPage(e) {\n    e.preventDefault();\n\n    if (props.currentPage) {\n      props.setPage(props.currentPage - 1);\n    }\n  };\n\n  var onNextPage = function onNextPage(e) {\n    e.preventDefault();\n\n    if (props.currentPage < props.totalPages - 1) {\n      props.setPage(props.currentPage + 1);\n    }\n  };\n\n  if (start <= props.totalPages) {\n    var totalPagesToShow = props.pages < props.totalPages ? start + props.pages - 1 : props.totalPages + 1;\n\n    var _loop = function _loop(i) {\n      var primary = props.currentPage === i - 1;\n      var innerClassName = (0, _helper.getClassName)(props.innerClass, 'button');\n      var className = innerClassName || primary ? innerClassName + ' ' + (primary ? 'active' : '') : null;\n\n      var pageBtn = _react2.default.createElement(_Button2.default, {\n        className: className,\n        primary: primary,\n        key: i - 1,\n        tabIndex: '0',\n        onKeyPress: function onKeyPress(event) {\n          return (0, _helper.handleA11yAction)(event, function () {\n            return props.setPage(i - 1);\n          });\n        },\n        onClick: function onClick(e) {\n          e.preventDefault();\n          props.setPage(i - 1);\n        },\n        href: '?' + props.fragmentName + '=' + i\n      }, i);\n\n      if (i <= props.totalPages + 1) {\n        pages.push(pageBtn);\n      }\n    };\n\n    for (var i = start; i < totalPagesToShow; i += 1) {\n      _loop(i);\n    }\n  }\n\n  if (!props.totalPages) {\n    return null;\n  }\n\n  var innerClassName = (0, _helper.getClassName)(props.innerClass, 'button');\n  var primary = props.currentPage === 0;\n  var className = innerClassName || primary ? innerClassName + ' ' + (primary ? 'active' : '') : null;\n  var prevHrefProp = {};\n  var nextHrefProp = {};\n\n  if (props.currentPage >= 1) {\n    prevHrefProp = {\n      href: '?' + props.fragmentName + '=' + props.currentPage,\n      rel: 'prev'\n    };\n  }\n\n  if (props.currentPage < props.totalPages - 1) {\n    nextHrefProp = {\n      href: '?' + props.fragmentName + '=' + (props.currentPage + 2),\n      rel: 'next'\n    };\n  }\n\n  return _react2.default.createElement('div', {\n    className: _Button.pagination + ' ' + (0, _helper.getClassName)(props.innerClass, 'pagination')\n  }, _react2.default.createElement(_Button2.default, _extends({\n    className: (0, _helper.getClassName)(props.innerClass, 'button') || null,\n    disabled: props.currentPage === 0,\n    onKeyPress: function onKeyPress(event) {\n      return (0, _helper.handleA11yAction)(event, onPrevPage);\n    },\n    onClick: onPrevPage,\n    tabIndex: '0'\n  }, prevHrefProp), 'Prev'), _react2.default.createElement(_Button2.default, {\n    className: className,\n    primary: primary,\n    onKeyPress: function onKeyPress(event) {\n      return (0, _helper.handleA11yAction)(event, function () {\n        return props.setPage(0);\n      });\n    },\n    onClick: function onClick(e) {\n      e.preventDefault();\n      props.setPage(0);\n    },\n    tabIndex: '0',\n    href: '?' + props.fragmentName + '=1'\n  }, '1'), props.currentPage >= props.pages ? _react2.default.createElement('span', null, '...') : null, pages, _react2.default.createElement(_Button2.default, _extends({\n    className: (0, _helper.getClassName)(props.innerClass, 'button') || null,\n    disabled: props.currentPage >= props.totalPages - 1,\n    onKeyPress: function onKeyPress(event) {\n      return (0, _helper.handleA11yAction)(event, onNextPage);\n    },\n    onClick: onNextPage,\n    tabIndex: '0'\n  }, nextHrefProp), 'Next'));\n}\n\nPagination.propTypes = {\n  currentPage: _types2.default.number,\n  innerClass: _types2.default.style,\n  pages: _types2.default.number,\n  setPage: _types2.default.func,\n  totalPages: _types2.default.number,\n  fragmentName: _types2.default.string\n};","map":null,"metadata":{},"sourceType":"script"}