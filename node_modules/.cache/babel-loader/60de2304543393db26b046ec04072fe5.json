{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _actions = require('@appbaseio/reactivecore/lib/actions');\n\nvar _helper = require('@appbaseio/reactivecore/lib/utils/helper');\n\nvar _types = require('@appbaseio/reactivecore/lib/utils/types');\n\nvar _types2 = _interopRequireDefault(_types);\n\nvar _Title = require('../../styles/Title');\n\nvar _Title2 = _interopRequireDefault(_Title);\n\nvar _Button = require('../../styles/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Flex = require('../../styles/Flex');\n\nvar _Flex2 = _interopRequireDefault(_Flex);\n\nvar _Container = require('../../styles/Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _utils = require('../../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar NumberBox = function (_Component) {\n  _inherits(NumberBox, _Component);\n\n  function NumberBox(props) {\n    _classCallCheck(this, NumberBox);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.type = 'term';\n    _this.state = {\n      currentValue: _this.props.data.start\n    };\n    _this.locked = false;\n    props.setQueryListener(props.componentId, props.onQueryChange, null);\n    return _this;\n  }\n\n  NumberBox.prototype.componentWillMount = function componentWillMount() {\n    this.props.addComponent(this.props.componentId);\n    this.setReact(this.props);\n\n    if (this.props.selectedValue) {\n      this.setValue(this.props.selectedValue);\n    } else if (this.props.defaultSelected) {\n      this.setValue(this.props.defaultSelected);\n    }\n  };\n\n  NumberBox.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    (0, _helper.checkPropChange)(this.props.react, nextProps.react, function () {\n      _this2.setReact(nextProps);\n    });\n    (0, _helper.checkPropChange)(this.props.defaultSelected, nextProps.defaultSelected, function () {\n      _this2.setValue(nextProps.defaultSelected, nextProps);\n    });\n    (0, _helper.checkPropChange)(this.props.queryFormat, nextProps.queryFormat, function () {\n      _this2.updateQuery(_this2.state.currentValue, nextProps);\n    });\n    (0, _helper.checkPropChange)(this.props.dataField, nextProps.dataField, function () {\n      _this2.updateQuery(_this2.state.currentValue, nextProps);\n    });\n  };\n\n  NumberBox.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.props.removeComponent(this.props.componentId);\n  };\n\n  NumberBox.prototype.setReact = function setReact(props) {\n    if (props.react) {\n      props.watchComponent(props.componentId, props.react);\n    }\n  };\n\n  NumberBox.prototype.render = function render() {\n    return _react2.default.createElement(_Container2.default, {\n      style: this.props.style,\n      className: this.props.className\n    }, this.props.title && _react2.default.createElement(_Title2.default, {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'title') || null\n    }, this.props.title), _react2.default.createElement(_Flex2.default, {\n      labelPosition: this.props.labelPosition,\n      justifyContent: 'space-between',\n      className: _Button.numberBoxContainer\n    }, _react2.default.createElement('span', {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'label') || null\n    }, this.props.data.label), _react2.default.createElement('div', null, _react2.default.createElement(_Button2.default, {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'button') || null,\n      onClick: this.decrementValue,\n      disabled: this.state.currentValue === this.props.data.start\n    }, _react2.default.createElement('b', null, '-')), this.state.currentValue, _react2.default.createElement(_Button2.default, {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'button') || null,\n      onClick: this.incrementValue,\n      disabled: this.state.currentValue === this.props.data.end\n    }, _react2.default.createElement('b', null, '+')))));\n  };\n\n  return NumberBox;\n}(_react.Component);\n\nNumberBox.defaultQuery = function (value, props) {\n  var _term, _range, _range2;\n\n  switch (props.queryFormat) {\n    case 'exact':\n      return {\n        term: (_term = {}, _term[props.dataField] = value, _term)\n      };\n\n    case 'lte':\n      return {\n        range: (_range = {}, _range[props.dataField] = {\n          lte: value,\n          boost: 2.0\n        }, _range)\n      };\n\n    default:\n      return {\n        range: (_range2 = {}, _range2[props.dataField] = {\n          gte: value,\n          boost: 2.0\n        }, _range2)\n      };\n  }\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.incrementValue = function () {\n    if (_this3.state.currentValue === _this3.props.data.end) {\n      return;\n    }\n\n    var currentValue = _this3.state.currentValue;\n\n    _this3.setValue(currentValue + 1);\n  };\n\n  this.decrementValue = function () {\n    if (_this3.state.currentValue === _this3.props.data.start) {\n      return;\n    }\n\n    var currentValue = _this3.state.currentValue;\n\n    _this3.setValue(currentValue - 1);\n  };\n\n  this.setValue = function (value) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this3.props; // ignore state updates when component is locked\n\n    if (props.beforeValueChange && _this3.locked) {\n      return;\n    }\n\n    _this3.locked = true;\n\n    var performUpdate = function performUpdate() {\n      _this3.setState({\n        currentValue: value\n      }, function () {\n        _this3.updateQuery(value, props);\n\n        _this3.locked = false;\n        if (props.onValueChange) props.onValueChange(value);\n      });\n    };\n\n    (0, _helper.checkValueChange)(props.componentId, value, props.beforeValueChange, performUpdate);\n  };\n\n  this.updateQuery = function (value, props) {\n    var query = props.customQuery || NumberBox.defaultQuery;\n    props.updateQuery({\n      componentId: props.componentId,\n      query: query(value, props),\n      value: value,\n      showFilter: false,\n      // we don't need filters for NumberBox\n      URLParams: props.URLParams,\n      componentType: 'NUMBERBOX'\n    });\n  };\n};\n\nNumberBox.propTypes = {\n  addComponent: _types2.default.funcRequired,\n  removeComponent: _types2.default.funcRequired,\n  setQueryListener: _types2.default.funcRequired,\n  updateQuery: _types2.default.funcRequired,\n  watchComponent: _types2.default.funcRequired,\n  selectedValue: _types2.default.selectedValue,\n  // component props\n  className: _types2.default.string,\n  componentId: _types2.default.stringRequired,\n  data: _types2.default.dataNumberBox,\n  dataField: _types2.default.stringRequired,\n  defaultSelected: _types2.default.number,\n  innerClass: _types2.default.style,\n  labelPosition: _types2.default.labelPosition,\n  onQueryChange: _types2.default.func,\n  queryFormat: _types2.default.queryFormatNumberBox,\n  react: _types2.default.react,\n  style: _types2.default.style,\n  title: _types2.default.title,\n  URLParams: _types2.default.bool\n};\nNumberBox.defaultProps = {\n  className: null,\n  labelPosition: 'left',\n  queryFormat: 'gte',\n  style: {},\n  URLParams: false\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    selectedValue: state.selectedValues[props.componentId] ? state.selectedValues[props.componentId].value : null\n  };\n};\n\nvar mapDispatchtoProps = function mapDispatchtoProps(dispatch) {\n  return {\n    addComponent: function addComponent(component) {\n      return dispatch((0, _actions.addComponent)(component));\n    },\n    removeComponent: function removeComponent(component) {\n      return dispatch((0, _actions.removeComponent)(component));\n    },\n    updateQuery: function updateQuery(updateQueryObject) {\n      return dispatch((0, _actions.updateQuery)(updateQueryObject));\n    },\n    watchComponent: function watchComponent(component, react) {\n      return dispatch((0, _actions.watchComponent)(component, react));\n    },\n    setQueryListener: function setQueryListener(component, onQueryChange, beforeQueryChange) {\n      return dispatch((0, _actions.setQueryListener)(component, onQueryChange, beforeQueryChange));\n    }\n  };\n};\n\nexports.default = (0, _utils.connect)(mapStateToProps, mapDispatchtoProps)(NumberBox);","map":null,"metadata":{},"sourceType":"script"}